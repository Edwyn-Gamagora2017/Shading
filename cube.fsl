#version 430

in vec3 positionModel;
in vec3 normalModel;
in vec2 uvTex;

uniform vec4 lightInfo;

//layout(binding=2) uniform sampler2D tex;
uniform sampler2D tex;

out vec4 color_out;

void main()
{
	vec3 toLight = lightInfo.xyz-positionModel.xyz;
	float distance = length(toLight);
	float lightValue = dot( normalize(toLight), normalize(normalModel) )/(distance*distance);
	if(lightValue < 0.0) lightValue = 0.0; // standard light : if the normal is in the opposite side

	vec2 uv = vec2( uvTex.x, uvTex.y );
	color_out = texture(tex, uv)*lightValue*lightInfo.w;           // color = texture * lightValue * lightIntensity
	//color_out = vec4(dot( normalize(toLight), normalize(normalModel) ));
}
